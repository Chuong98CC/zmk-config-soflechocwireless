/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <29>; };

/ {
    behaviors {
        home_row_mod: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp ESCAPE                &kp N1  &kp N2                             &kp N3                          &kp N4                      &kp N5                                                                 &kp N6       &kp N7           &kp N8     &kp N9     &kp N0            &kp DEL
&kp TAB                   &kp Q   &kp W                              &kp E                           &kp R                       &kp T                                                                  &kp Y        &kp U            &kp I      &kp O      &kp P             &kp SINGLE_QUOTE
&kp GRAVE                 &kp A   &kp S                              &kp D                           &home_row_mod LEFT_SHIFT F  &kp G                                                                  &kp H        &kp J            &kp K      &kp L      &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&mt LEFT_SHIFT BACKSLASH  &kp Z   &kp X                              &kp C                           &kp V                       &kp B                 &kp K_MUTE          &kp C_PLAY_PAUSE             &kp N        &kp M            &kp COMMA  &kp DOT    &kp FSLH          &kp SEMICOLON
                                  &mt LEFT_CONTROL LG(LEFT_BRACKET)  &mt LEFT_GUI LG(RIGHT_BRACKET)  &lt 1 SPACE                 &mt LEFT_SHIFT SPACE  &mt LEFT_ALT TAB    &mt RG(RIGHT_ALT) BACKSPACE  &lt 2 SPACE  &mt RCTRL ENTER  &kp MINUS  &kp EQUAL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bootloader  &bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_DISC 0  &bt BT_SEL 1   &bt BT_DISC 1                    &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &bootloader
&sys_reset   &kp RG(RA(Q))   &kp RG(RA(W))  &kp RA(RG(E))  &kp RA(RG(R))  &kp RG(RA(T))                    &kp RA(RG(Y))    &kp RA(RG(U))    &kp RA(RG(I))      &kp RA(RG(O))    &kp RA(RG(P))    &sys_reset
&trans       &kp RA(RG(A))   &kp RA(RG(S))  &kp RA(RG(D))  &kp RA(RG(F))  &kp RG(RA(G))                    &kp RA(RG(H))    &kp RA(RG(J))    &kp RA(RG(K))      &kp RA(RG(L))    &kp DEL          &kp BSPC
&trans       &kp RG(RA(Z))   &kp RG(RA(X))  &kp RG(RA(C))  &kp RA(RG(V))  &kp RA(RG(B))  &trans    &trans  &kp RA(RG(N))    &kp RA(RG(M))    &kp RA(RG(COMMA))  &kp RA(RG(DOT))  &trans           &trans
                             &trans         &trans         &trans         &trans         &trans    &trans  &trans           &trans           &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            bindings = <
&trans   &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET       &kp AMPERSAND   &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans   &kp F1           &kp F2       &kp F3    &kp F4      &kp F5                         &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP    &msc SCRL_DOWN        &kp RG(P)              &kp DOUBLE_QUOTES
&kp F16  &kp F6           &kp F7       &kp F8    &kp F9      &kp F10                        &kp LEFT        &kp DOWN        &kp UP          &kp RIGHT             &kp LEFT_BRACE         &kp RIGHT_BRACE
&kp F17  &kp F11          &kp F12      &kp F13   &kp F14     &kp F15      &trans    &trans  &kp HOME        &kp END         &kp LESS_THAN   &kp GREATER_THAN      &kp QUESTION           &kp COLON
                          &trans       &trans    &trans      &trans       &trans    &trans  &trans          &trans          &kp UNDERSCORE  &kp PLUS
            >;
        };
    };
};
