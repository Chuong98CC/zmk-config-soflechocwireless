/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip { chain-length = <29>; };

/ {
    behaviors {
        home_row_mod: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                         |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                         |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                         |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |        | ExtPw |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |        | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&gresc                    &kp N1  &kp N2              &kp N3            &kp N4                  &kp N5                                                          &kp N6       &kp N7                 &kp N8             &kp N9             &kp N0    &kp MINUS
&kp TAB                   &kp Q   &kp W               &kp E             &kp R                   &kp T                                                           &kp Y        &kp U                  &kp I              &kp O              &kp P     &kp EQUAL
&mt LEFT_GUI PAGE_UP      &kp A   &kp S               &kp D             &kp F                   &kp G                                                           &kp H        &kp J                  &kp K              &kp L              &kp SEMI  &kp SINGLE_QUOTE
&mt LEFT_SHIFT PAGE_DOWN  &kp Z   &kp X               &kp C             &kp V                   &kp B                 &mt LEFT_CONTROL TAB       &kp BACKSPACE  &kp N        &kp M                  &kp COMMA          &kp DOT            &kp FSLH  &kp ENTER
                                  &mt LEFT_ALT SPACE  &mt LEFT_GUI TAB  &lt 1 RG(LEFT_BRACKET)  &mt LEFT_SHIFT SPACE  &lt 2 RG(RIGHT_BRACKET)    &kp DELETE     &lt 2 SPACE  &mt RIGHT_SHIFT SPACE  &kp RG(RIGHT_ALT)  &kp RIGHT_CONTROL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp C_NEXT C_PREV>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bootloader  &kp F1         &kp F2         &kp F3         &kp F4          &kp F5                                &kp F6         &kp F7         &kp F8             &kp F9           &kp F10          &kp F11
&sys_reset   &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_CLR_ALL  &kp RG(RA(T))                         &kp F13        &kp F14        &kp F15            &kp F16          &kp F17          &kp F12
&trans       &kp RA(RG(A))  &kp RA(RG(S))  &kp RA(RG(D))  &kp RA(RG(F))   &kp RG(RA(G))                         &kp RA(RG(H))  &kp RA(RG(J))  &kp RA(RG(K))      &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_TOG
&trans       &kp RG(RA(Z))  &kp RG(RA(X))  &kp RG(RA(C))  &kp RA(RG(V))   &kp RA(RG(B))  &trans    &bootloader  &kp RA(RG(N))  &kp RA(RG(M))  &kp RA(RG(COMMA))  &kp RA(RG(DOT))  &trans           &trans
                            &trans         &trans         &trans          &trans         &trans    &sys_reset   &trans         &trans         &trans             &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            bindings = <
&kp TILDE  &kp EXCLAMATION  &kp AT_SIGN  &kp HASH  &kp DOLLAR  &kp PERCENT                    &kp CARET             &kp AMPERSAND      &kp ASTERISK    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDERSCORE
&trans     &kp F1           &kp F2       &kp F3    &kp F4      &kp F5                         &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp UP_ARROW    &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PLUS
&kp F16    &kp F6           &kp F7       &kp F8    &kp F9      &kp F10                        &kp NON_US_BACKSLASH  &kp LEFT           &kp DOWN_ARROW  &kp RIGHT             &kp COLON              &kp DOUBLE_QUOTES
&kp F17    &kp F11          &kp F12      &kp F13   &kp F14     &kp F15      &trans    &trans  &kp PIPE              &kp BACKSLASH      &kp LESS_THAN   &kp GREATER_THAN      &kp QUESTION           &kp RS(ENTER)
                            &trans       &trans    &trans      &trans       &trans    &trans  &trans                &trans             &trans          &trans
            >;
        };
    };
};
